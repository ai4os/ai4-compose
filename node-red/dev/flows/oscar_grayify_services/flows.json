[
    {
        "id": "efa34d4c600356ce",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cc18020bc6f47fc4",
        "type": "subflow",
        "name": "OSCAR Grayify Services",
        "info": "<header>\n        <!-- menu de naveacion, logo , redes-->\n        <h1> OSCAR Grayify Services Node</h1>\n</header>\n    <main>\n        <section>\n            <article>\n                <h3>About Grayify </h3>\n                <p>This node supports highly-scalable event-driven image conversion to grayscale using the popular ImageMagick software.</p>\n                <p>ImageMagick® is a free and open-source software suite for displaying, converting, and editing raster image and vector image files. It can read and write over 200 image file formats, and can support a wide range of image manipulation operations, such as resizing, cropping, and color correction. </p>\n                <ul>\n                    <li>\n                        <a rel=\"stylesheet\" href=\"https://imagemagick.org/index.php\">ImageMagick </a>\n                    </li>\n                </ul>\n            </article>\n            <article>\n                <h3>About Cowsay Service in OSCAR</h3>\n                <p>The goal of this service is to have:</p>\n                <ul>\n                    <li>An input bucket created in Minio on which the user uploads the files to be converted.</li>\n                    <li>A function that is triggered upon each file upload in order to trigger the file conversion, which is automatically handled by an elastic Kubernetes cluster that provisions additional nodes on-demand if required.</li>\n                    <li>An output bucket created in Minio on which the user will find the converted files.</li>\n                </ul>\n                <p>For more information consult:</p>\n                <ul>\n                    <li>\n                        <a rel=\"stylesheet\" href=\"https://github.com/grycap/oscar/tree/master/examples/imagemagick\">Grayify Service </a>\n                    </li>\n                </ul>\n            </article>\n            <article>\n                <h3>Inputs</h3>\n                <p>The input variables will be the basic variables (OSCAR server url and credentials). In addition to the name that has been given to the grayify service on the server. Inside the input <code> msg.payload </code> must be the text to write. With all these elements, the service token is searched and then a request is made to the service ( POST /run/{serviceName}).</p>\n                <ul>\n                    <li>\n                        <a rel=\"stylesheet\" href=\"https://docs.oscar.grycap.net/api/\">Syns </a>\n                    </li>\n                </ul>\n            </article>\n            <article>\n                <h3>Outputs</h3>\n                <p> The node returns through <code>msg.payload</code> the grayscale image (base64), which can be used in image display nodes such as images preview node.</p>\n            </article>\n        </section>\n    </main>\n    <footer>\n        GRyCAP (Grupo de Grid y Computación de Altas Prestaciones) - UPV\n    </footer>",
        "category": "OSCAR",
        "in": [
            {
                "x": 40,
                "y": 140,
                "wires": [
                    {
                        "id": "713521bb6df8eb11"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1480,
                "y": 200,
                "wires": [
                    {
                        "id": "d9dda2d17491996e",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1280,
                "y": 300,
                "wires": [
                    {
                        "id": "2b8cdd018191f987",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "Server",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-globe"
                }
            },
            {
                "name": "Service Name",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-pencil"
                }
            },
            {
                "name": "User",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-user-circle-o"
                }
            },
            {
                "name": "Password",
                "type": "cred",
                "ui": {
                    "icon": "font-awesome/fa-key"
                }
            }
        ],
        "meta": {
            "module": "node-red-contrib-oscar-grayify",
            "version": "1.0.0",
            "author": "Vicente Rodriguez Benitez <vicente.rdguezb@gmail.com, vrodben1@i3m.upv.es>",
            "desc": "Grayify Services at OSCAR",
            "keywords": "node-red, oscar,grayify",
            "license": "Apache-2.0"
        },
        "color": "#3FADB5",
        "outputLabels": [
            "Output image",
            "Output data (complete json)"
        ],
        "icon": "font-awesome/fa-image",
        "status": {
            "x": 1420,
            "y": 40,
            "wires": [
                {
                    "id": "44e4a85b83560750",
                    "port": 0
                },
                {
                    "id": "f04a2b1140d06b6e",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "d909137427ec86c3",
        "type": "ui_group",
        "name": "Panel de configuración",
        "tab": "6448784546d2f2b2",
        "order": 1,
        "disp": true,
        "width": 7,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1405e607081b9d86",
        "type": "ui_group",
        "name": "Visualización",
        "tab": "6448784546d2f2b2",
        "order": 2,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "160e81fb.f1c86e",
        "type": "ui_group",
        "name": "File Browser",
        "tab": "6448784546d2f2b2",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6448784546d2f2b2",
        "type": "ui_tab",
        "name": "NodeRed-OSCAR",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a02d4fbec5ada8fd",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "0fa40667e9f48ec2",
        "type": "function",
        "z": "cc18020bc6f47fc4",
        "name": "Load Log",
        "func": "msg.payload={\n\"username\":msg.username,\n\"password\":msg.pass\n\n}\nmsg.url = msg.oscar_server +\"/system/services/\"+msg.grayify ;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 140,
        "wires": [
            [
                "4ce76c5246874dd6"
            ]
        ]
    },
    {
        "id": "713521bb6df8eb11",
        "type": "change",
        "z": "cc18020bc6f47fc4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "oscar_server",
                "pt": "msg",
                "to": "Server",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "username",
                "pt": "msg",
                "to": "User",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "pass",
                "pt": "msg",
                "to": "Password",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "image",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "grayify",
                "pt": "msg",
                "to": "Service Name",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 140,
        "wires": [
            [
                "0fa40667e9f48ec2",
                "44e4a85b83560750"
            ]
        ]
    },
    {
        "id": "4ce76c5246874dd6",
        "type": "change",
        "z": "cc18020bc6f47fc4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"Authorization\": 'Basic ' & $base64encode(\t       payload.username & ':' & payload.password\t   ) \t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 140,
        "wires": [
            [
                "eeb674928976ec41"
            ]
        ]
    },
    {
        "id": "eeb674928976ec41",
        "type": "http request",
        "z": "cc18020bc6f47fc4",
        "name": "Grayify Service GET",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": true,
        "authType": "basic",
        "senderr": true,
        "headers": [],
        "x": 700,
        "y": 140,
        "wires": [
            [
                "8470a28c85e4e094"
            ]
        ]
    },
    {
        "id": "8470a28c85e4e094",
        "type": "string",
        "z": "cc18020bc6f47fc4",
        "name": "",
        "methods": [
            {
                "name": "between",
                "params": [
                    {
                        "type": "str",
                        "value": "\"token\":\""
                    },
                    {
                        "type": "str",
                        "value": "\",\"file\""
                    }
                ]
            }
        ],
        "prop": "payload",
        "propout": "payload",
        "object": "msg",
        "objectout": "msg",
        "x": 870,
        "y": 140,
        "wires": [
            [
                "2f72c3b43b2a9197"
            ]
        ]
    },
    {
        "id": "2f72c3b43b2a9197",
        "type": "function",
        "z": "cc18020bc6f47fc4",
        "name": "Get Token-Grayify",
        "func": "var  var1 = msg.payload;\n\nmsg.token_grayify= var1;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n//flow.set(\"token_cowsay\",\"\");\n",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 140,
        "wires": [
            [
                "ffa9ecc49dd969f4"
            ]
        ]
    },
    {
        "id": "ffa9ecc49dd969f4",
        "type": "function",
        "z": "cc18020bc6f47fc4",
        "name": "Send plants-token",
        "func": "\nvar token_grayify = msg.token_grayify;\n\n\nmsg.headers = {\n    Authorization: \"Bearer \" + token_grayify\n}\n\nmsg.payload = msg.image;\nmsg.url = msg.oscar_server+\"/run/\"+msg.grayify;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 200,
        "wires": [
            [
                "3c6c31bf9f72c551"
            ]
        ]
    },
    {
        "id": "3c6c31bf9f72c551",
        "type": "base64",
        "z": "cc18020bc6f47fc4",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 480,
        "y": 200,
        "wires": [
            [
                "2b8cdd018191f987"
            ]
        ]
    },
    {
        "id": "2b8cdd018191f987",
        "type": "http request",
        "z": "cc18020bc6f47fc4",
        "name": "Grayify Services Run",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": true,
        "headers": [],
        "x": 660,
        "y": 200,
        "wires": [
            [
                "6b551e03681af190"
            ]
        ]
    },
    {
        "id": "6b551e03681af190",
        "type": "string",
        "z": "cc18020bc6f47fc4",
        "name": "",
        "methods": [
            {
                "name": "delLeftMost",
                "params": [
                    {
                        "type": "str",
                        "value": "response"
                    }
                ]
            }
        ],
        "prop": "payload",
        "propout": "payload",
        "object": "msg",
        "objectout": "msg",
        "x": 870,
        "y": 200,
        "wires": [
            [
                "bcfdf930a9e42a00"
            ]
        ]
    },
    {
        "id": "bcfdf930a9e42a00",
        "type": "base64",
        "z": "cc18020bc6f47fc4",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 1020,
        "y": 200,
        "wires": [
            [
                "d9dda2d17491996e"
            ]
        ]
    },
    {
        "id": "44e4a85b83560750",
        "type": "change",
        "z": "cc18020bc6f47fc4",
        "name": "Start Service",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Processing....",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "f04a2b1140d06b6e",
        "type": "change",
        "z": "cc18020bc6f47fc4",
        "name": "End Service",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Finished....",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "d9dda2d17491996e",
        "type": "change",
        "z": "cc18020bc6f47fc4",
        "name": "Clear Data",
        "rules": [
            {
                "t": "set",
                "p": "pass",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "username",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "oscar_server",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "grayify",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "image",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "token_grayify",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 200,
        "wires": [
            [
                "f04a2b1140d06b6e"
            ]
        ]
    },
    {
        "id": "3238d10b26978380",
        "type": "subflow:cc18020bc6f47fc4",
        "z": "efa34d4c600356ce",
        "name": "",
        "env": [
            {
                "name": "Password",
                "type": "cred"
            }
        ],
        "x": 630,
        "y": 120,
        "wires": [
            [],
            []
        ]
    }
]
